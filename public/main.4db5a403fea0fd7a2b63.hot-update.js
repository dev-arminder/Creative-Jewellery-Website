/*! For license information please see main.4db5a403fea0fd7a2b63.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefrontend_boilerplate("main",{"./app/components/Canvas/index.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>c});var n=s("./node_modules/ogl/src/core/Renderer.js"),i=s("./node_modules/ogl/src/core/Camera.js"),h=s("./node_modules/ogl/src/core/Transform.js"),o=s("./app/components/Canvas/Home/Home.js");const c=class{constructor(){this.x={start:0,end:0,distance:0},this.y={start:0,end:0,distance:0},this.createRenderer(),this.createCamera(),this.createScene(),this.onResize(),this.createHome()}createRenderer(){this.renderer=new n.Renderer({alpha:!0,antialias:!0}),this.gl=this.renderer.gl;document.querySelector("#main-script").before(this.gl.canvas)}createCamera(){this.camera=new i.Camera(this.gl),this.camera.position.z=5}createScene(){this.scene=new h.Transform}createHome(){this.home=new o.default({gl:this.gl,scene:this.scene,sizes:this.sizes})}onTouchDown(){this.isDown=!0,this.x.start=event.touches?event.touches[0].clientX:event.clientX,this.y.start=event.touches?event.touches[0].clientY:event.clientY,this.home&&this.home.onTouchDown({x:this.x,y:this.y})}onTouchMove(){if(!this.isDown)return;const e=event.touches?event.touches[0].clientX:event.clientX,t=event.touches?event.touches[0].clientY:event.clientY;this.x.end=e,this.y.end=t,this.home&&this.home.onTouchMove({x:this.x,y:this.y})}onTouchUp(){this.isDown=!1;const e=event.touches?event.touches[0].clientX:event.clientX,t=event.touches?event.touches[0].clientY:event.clientY;this.x.end=e,this.y.end=t,this.home&&this.home.onTouchUp({x:this.x,y:this.y})}onResize(){this.renderer.setSize(window.innerWidth,window.innerHeight),this.camera.perspective({aspect:window.innerWidth/window.innerHeight});const e=this.camera.fov*(Math.PI/180),t=2*Math.tan(e/2)*this.camera.position.z,s=t*this.camera.aspect;this.sizes={height:t,width:s},this.home&&this.home.onResize({sizes:this.sizes})}onWheel(e){this.home&&this.home.onWheel(e)}update(e){this.home&&this.home.update(),this.renderer.render({camera:this.camera,scene:this.scene})}}}},(function(e){e.h=()=>"0b49d99d12e0d90f8708"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi40ZGI1YTQwM2ZlYTBmZDdhMmI2My5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7c1VBMElBLFFBdElBLE1BQ0VBLGNBQ0VDLEtBQUtDLEVBQUksQ0FDUEMsTUFBTyxFQUNQQyxJQUFLLEVBQ0xDLFNBQVUsR0FHWkosS0FBS0ssRUFBSSxDQUNQSCxNQUFPLEVBQ1BDLElBQUssRUFDTEMsU0FBVSxHQUVaSixLQUFLTSxpQkFDTE4sS0FBS08sZUFDTFAsS0FBS1EsY0FFTFIsS0FBS1MsV0FFTFQsS0FBS1UsYUFFUEosaUJBQ0VOLEtBQUtXLFNBQVcsSUFBSUMsRUFBQUEsU0FBUyxDQUMzQkMsT0FBTyxFQUNQQyxXQUFXLElBRWJkLEtBQUtlLEdBQUtmLEtBQUtXLFNBQVNJLEdBQ05DLFNBQVNDLGNBQWMsZ0JBQy9CQyxPQUFPbEIsS0FBS2UsR0FBR0ksUUFHM0JaLGVBQ0VQLEtBQUtvQixPQUFTLElBQUlDLEVBQUFBLE9BQU9yQixLQUFLZSxJQUM5QmYsS0FBS29CLE9BQU9FLFNBQVNDLEVBQUksRUFHM0JmLGNBQ0VSLEtBQUt3QixNQUFRLElBQUlDLEVBQUFBLFVBR25CZixhQUNFVixLQUFLMEIsS0FBTyxJQUFJQyxFQUFBQSxRQUFLLENBQUVaLEdBQUlmLEtBQUtlLEdBQUlTLE1BQU94QixLQUFLd0IsTUFBT0ksTUFBTzVCLEtBQUs0QixRQUdyRUMsY0FDRTdCLEtBQUs4QixRQUFTLEVBQ2Q5QixLQUFLQyxFQUFFQyxNQUFRNkIsTUFBTUMsUUFBVUQsTUFBTUMsUUFBUSxHQUFHQyxRQUFVRixNQUFNRSxRQUNoRWpDLEtBQUtLLEVBQUVILE1BQVE2QixNQUFNQyxRQUFVRCxNQUFNQyxRQUFRLEdBQUdFLFFBQVVILE1BQU1HLFFBRTVEbEMsS0FBSzBCLE1BQ1AxQixLQUFLMEIsS0FBS0csWUFBWSxDQUNwQjVCLEVBQUdELEtBQUtDLEVBQ1JJLEVBQUdMLEtBQUtLLElBSWQ4QixjQUNFLElBQUtuQyxLQUFLOEIsT0FBUSxPQUNsQixNQUFNN0IsRUFBSThCLE1BQU1DLFFBQVVELE1BQU1DLFFBQVEsR0FBR0MsUUFBVUYsTUFBTUUsUUFDckQ1QixFQUFJMEIsTUFBTUMsUUFBVUQsTUFBTUMsUUFBUSxHQUFHRSxRQUFVSCxNQUFNRyxRQUUzRGxDLEtBQUtDLEVBQUVFLElBQU1GLEVBQ2JELEtBQUtLLEVBQUVGLElBQU1FLEVBS1RMLEtBQUswQixNQUNQMUIsS0FBSzBCLEtBQUtTLFlBQVksQ0FDcEJsQyxFQUFHRCxLQUFLQyxFQUNSSSxFQUFHTCxLQUFLSyxJQUtkK0IsWUFDRXBDLEtBQUs4QixRQUFTLEVBQ2QsTUFBTTdCLEVBQUk4QixNQUFNQyxRQUFVRCxNQUFNQyxRQUFRLEdBQUdDLFFBQVVGLE1BQU1FLFFBQ3JENUIsRUFBSTBCLE1BQU1DLFFBQVVELE1BQU1DLFFBQVEsR0FBR0UsUUFBVUgsTUFBTUcsUUFFM0RsQyxLQUFLQyxFQUFFRSxJQUFNRixFQUNiRCxLQUFLSyxFQUFFRixJQUFNRSxFQUVUTCxLQUFLMEIsTUFDUDFCLEtBQUswQixLQUFLVSxVQUFVLENBQ2xCbkMsRUFBR0QsS0FBS0MsRUFDUkksRUFBR0wsS0FBS0ssSUFLZEksV0FDRVQsS0FBS1csU0FBUzBCLFFBQVFDLE9BQU9DLFdBQVlELE9BQU9FLGFBQ2hEeEMsS0FBS29CLE9BQU9xQixZQUFZLENBQ3RCQyxPQUFRSixPQUFPQyxXQUFhRCxPQUFPRSxjQUdyQyxNQUFNRyxFQUFNM0MsS0FBS29CLE9BQU91QixLQUFPQyxLQUFLQyxHQUFLLEtBQ25DQyxFQUFTLEVBQUlGLEtBQUtHLElBQUlKLEVBQU0sR0FBSzNDLEtBQUtvQixPQUFPRSxTQUFTQyxFQUN0RHlCLEVBQVFGLEVBQVM5QyxLQUFLb0IsT0FBT3NCLE9BRW5DMUMsS0FBSzRCLE1BQVEsQ0FDWGtCLE9BQUFBLEVBQ0FFLE1BQUFBLEdBR0VoRCxLQUFLMEIsTUFDUDFCLEtBQUswQixLQUFLakIsU0FBUyxDQUNqQm1CLE1BQU81QixLQUFLNEIsUUFLbEJxQixRQUFRQyxHQUNGbEQsS0FBSzBCLE1BQ1AxQixLQUFLMEIsS0FBS3VCLFFBQVFDLEdBSXRCQyxPQUFPQyxHQUdEcEQsS0FBSzBCLE1BQ1AxQixLQUFLMEIsS0FBS3lCLFNBRVpuRCxLQUFLVyxTQUFTMEMsT0FBTyxDQUNuQmpDLE9BQVFwQixLQUFLb0IsT0FDYkksTUFBT3hCLEtBQUt3Qix5QkNuSWxCOEIsRUFBb0JDLEVBQUksSUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLWJvaWxlcnBsYXRlLy4vYXBwL2NvbXBvbmVudHMvQ2FudmFzL2luZGV4LmpzIiwid2VicGFjazovL2Zyb250ZW5kLWJvaWxlcnBsYXRlL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZW5kZXJlciwgQ2FtZXJhLCBUcmFuc2Zvcm0gfSBmcm9tIFwib2dsXCI7XHJcblxyXG5pbXBvcnQgSG9tZSBmcm9tIFwiLi9Ib21lL0hvbWVcIjtcclxuXHJcbmNsYXNzIENhbnZhcyB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLnggPSB7XHJcbiAgICAgIHN0YXJ0OiAwLFxyXG4gICAgICBlbmQ6IDAsXHJcbiAgICAgIGRpc3RhbmNlOiAwXHJcbiAgICB9O1xyXG5cclxuICAgIHRoaXMueSA9IHtcclxuICAgICAgc3RhcnQ6IDAsXHJcbiAgICAgIGVuZDogMCxcclxuICAgICAgZGlzdGFuY2U6IDBcclxuICAgIH07XHJcbiAgICB0aGlzLmNyZWF0ZVJlbmRlcmVyKCk7XHJcbiAgICB0aGlzLmNyZWF0ZUNhbWVyYSgpO1xyXG4gICAgdGhpcy5jcmVhdGVTY2VuZSgpO1xyXG5cclxuICAgIHRoaXMub25SZXNpemUoKTtcclxuXHJcbiAgICB0aGlzLmNyZWF0ZUhvbWUoKTtcclxuICB9XHJcbiAgY3JlYXRlUmVuZGVyZXIoKSB7XHJcbiAgICB0aGlzLnJlbmRlcmVyID0gbmV3IFJlbmRlcmVyKHtcclxuICAgICAgYWxwaGE6IHRydWUsXHJcbiAgICAgIGFudGlhbGlhczogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICB0aGlzLmdsID0gdGhpcy5yZW5kZXJlci5nbDtcclxuICAgIGNvbnN0IHNjcmlwdFRhZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbWFpbi1zY3JpcHRcIik7XHJcbiAgICBzY3JpcHRUYWcuYmVmb3JlKHRoaXMuZ2wuY2FudmFzKTtcclxuICB9XHJcblxyXG4gIGNyZWF0ZUNhbWVyYSgpIHtcclxuICAgIHRoaXMuY2FtZXJhID0gbmV3IENhbWVyYSh0aGlzLmdsKTtcclxuICAgIHRoaXMuY2FtZXJhLnBvc2l0aW9uLnogPSA1O1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlU2NlbmUoKSB7XHJcbiAgICB0aGlzLnNjZW5lID0gbmV3IFRyYW5zZm9ybSgpO1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlSG9tZSgpIHtcclxuICAgIHRoaXMuaG9tZSA9IG5ldyBIb21lKHsgZ2w6IHRoaXMuZ2wsIHNjZW5lOiB0aGlzLnNjZW5lLCBzaXplczogdGhpcy5zaXplcyB9KTtcclxuICB9XHJcblxyXG4gIG9uVG91Y2hEb3duKCkge1xyXG4gICAgdGhpcy5pc0Rvd24gPSB0cnVlO1xyXG4gICAgdGhpcy54LnN0YXJ0ID0gZXZlbnQudG91Y2hlcyA/IGV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WCA6IGV2ZW50LmNsaWVudFg7XHJcbiAgICB0aGlzLnkuc3RhcnQgPSBldmVudC50b3VjaGVzID8gZXZlbnQudG91Y2hlc1swXS5jbGllbnRZIDogZXZlbnQuY2xpZW50WTtcclxuXHJcbiAgICBpZiAodGhpcy5ob21lKSB7XHJcbiAgICAgIHRoaXMuaG9tZS5vblRvdWNoRG93bih7XHJcbiAgICAgICAgeDogdGhpcy54LFxyXG4gICAgICAgIHk6IHRoaXMueVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcbiAgb25Ub3VjaE1vdmUoKSB7XHJcbiAgICBpZiAoIXRoaXMuaXNEb3duKSByZXR1cm47XHJcbiAgICBjb25zdCB4ID0gZXZlbnQudG91Y2hlcyA/IGV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WCA6IGV2ZW50LmNsaWVudFg7XHJcbiAgICBjb25zdCB5ID0gZXZlbnQudG91Y2hlcyA/IGV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WSA6IGV2ZW50LmNsaWVudFk7XHJcblxyXG4gICAgdGhpcy54LmVuZCA9IHg7XHJcbiAgICB0aGlzLnkuZW5kID0geTtcclxuXHJcbiAgICAvLyB0aGlzLnguZGlzdGFuY2UgPSB0aGlzLnguc3RhcnQgLSB0aGlzLnguZW5kO1xyXG4gICAgLy8gdGhpcy55LmRpc3RhbmNlID0gdGhpcy55LnN0YXJ0IC0gdGhpcy55LmVuZDtcclxuXHJcbiAgICBpZiAodGhpcy5ob21lKSB7XHJcbiAgICAgIHRoaXMuaG9tZS5vblRvdWNoTW92ZSh7XHJcbiAgICAgICAgeDogdGhpcy54LFxyXG4gICAgICAgIHk6IHRoaXMueVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIG9uVG91Y2hVcCgpIHtcclxuICAgIHRoaXMuaXNEb3duID0gZmFsc2U7XHJcbiAgICBjb25zdCB4ID0gZXZlbnQudG91Y2hlcyA/IGV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WCA6IGV2ZW50LmNsaWVudFg7XHJcbiAgICBjb25zdCB5ID0gZXZlbnQudG91Y2hlcyA/IGV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WSA6IGV2ZW50LmNsaWVudFk7XHJcblxyXG4gICAgdGhpcy54LmVuZCA9IHg7XHJcbiAgICB0aGlzLnkuZW5kID0geTtcclxuXHJcbiAgICBpZiAodGhpcy5ob21lKSB7XHJcbiAgICAgIHRoaXMuaG9tZS5vblRvdWNoVXAoe1xyXG4gICAgICAgIHg6IHRoaXMueCxcclxuICAgICAgICB5OiB0aGlzLnlcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBvblJlc2l6ZSgpIHtcclxuICAgIHRoaXMucmVuZGVyZXIuc2V0U2l6ZSh3aW5kb3cuaW5uZXJXaWR0aCwgd2luZG93LmlubmVySGVpZ2h0KTtcclxuICAgIHRoaXMuY2FtZXJhLnBlcnNwZWN0aXZlKHtcclxuICAgICAgYXNwZWN0OiB3aW5kb3cuaW5uZXJXaWR0aCAvIHdpbmRvdy5pbm5lckhlaWdodFxyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc3QgZm92ID0gdGhpcy5jYW1lcmEuZm92ICogKE1hdGguUEkgLyAxODApO1xyXG4gICAgY29uc3QgaGVpZ2h0ID0gMiAqIE1hdGgudGFuKGZvdiAvIDIpICogdGhpcy5jYW1lcmEucG9zaXRpb24uejtcclxuICAgIGNvbnN0IHdpZHRoID0gaGVpZ2h0ICogdGhpcy5jYW1lcmEuYXNwZWN0O1xyXG5cclxuICAgIHRoaXMuc2l6ZXMgPSB7XHJcbiAgICAgIGhlaWdodCxcclxuICAgICAgd2lkdGhcclxuICAgIH07XHJcblxyXG4gICAgaWYgKHRoaXMuaG9tZSkge1xyXG4gICAgICB0aGlzLmhvbWUub25SZXNpemUoe1xyXG4gICAgICAgIHNpemVzOiB0aGlzLnNpemVzXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgb25XaGVlbChlKSB7XHJcbiAgICBpZiAodGhpcy5ob21lKSB7XHJcbiAgICAgIHRoaXMuaG9tZS5vbldoZWVsKGUpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdXBkYXRlKHNjcm9sbCkge1xyXG4gICAgLy8gdGhpcy5tZXNoLnJvdGF0aW9uLnggKz0gMC4xO1xyXG4gICAgLy8gdGhpcy5tZXNoLnJvdGF0aW9uLnkgKz0gMC4xO1xyXG4gICAgaWYgKHRoaXMuaG9tZSkge1xyXG4gICAgICB0aGlzLmhvbWUudXBkYXRlKCk7XHJcbiAgICB9XHJcbiAgICB0aGlzLnJlbmRlcmVyLnJlbmRlcih7XHJcbiAgICAgIGNhbWVyYTogdGhpcy5jYW1lcmEsXHJcbiAgICAgIHNjZW5lOiB0aGlzLnNjZW5lXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8vIHNob3coKSB7fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDYW52YXM7XHJcbiIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcIjBiNDlkOTlkMTJlMGQ5MGY4NzA4XCIpIl0sIm5hbWVzIjpbImNvbnN0cnVjdG9yIiwidGhpcyIsIngiLCJzdGFydCIsImVuZCIsImRpc3RhbmNlIiwieSIsImNyZWF0ZVJlbmRlcmVyIiwiY3JlYXRlQ2FtZXJhIiwiY3JlYXRlU2NlbmUiLCJvblJlc2l6ZSIsImNyZWF0ZUhvbWUiLCJyZW5kZXJlciIsIlJlbmRlcmVyIiwiYWxwaGEiLCJhbnRpYWxpYXMiLCJnbCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImJlZm9yZSIsImNhbnZhcyIsImNhbWVyYSIsIkNhbWVyYSIsInBvc2l0aW9uIiwieiIsInNjZW5lIiwiVHJhbnNmb3JtIiwiaG9tZSIsIkhvbWUiLCJzaXplcyIsIm9uVG91Y2hEb3duIiwiaXNEb3duIiwiZXZlbnQiLCJ0b3VjaGVzIiwiY2xpZW50WCIsImNsaWVudFkiLCJvblRvdWNoTW92ZSIsIm9uVG91Y2hVcCIsInNldFNpemUiLCJ3aW5kb3ciLCJpbm5lcldpZHRoIiwiaW5uZXJIZWlnaHQiLCJwZXJzcGVjdGl2ZSIsImFzcGVjdCIsImZvdiIsIk1hdGgiLCJQSSIsImhlaWdodCIsInRhbiIsIndpZHRoIiwib25XaGVlbCIsImUiLCJ1cGRhdGUiLCJzY3JvbGwiLCJyZW5kZXIiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiaCJdLCJzb3VyY2VSb290IjoiIn0=